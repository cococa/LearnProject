group 'cocoa'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


//jar {
//    String someString = ''
//    configurations.runtime.each {someString = someString + " lib\\"+it.name}
//    manifest {
//        attributes 'Main-Class': 'com.cocoa.shiji'
//        attributes 'Class-Path': someString
//    }
//}
//jar {
//    manifest {
//        attributes 'Main-Class': 'com.cocoa.shiji.Main'
//    }
//    into('libs') {
//        from configurations.runtime
//    }
//
//}

//打包
//task runnbaleJar(type: Jar) {
//    from files(sourceSets.main.output.classesDir)
//    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
//    manifest {
//        attributes  'Main-Class':'com.cocoa.shiji'
//    }
//}




dependencies {
    compile fileTree(include: ['*.jar'], dir: 'lib')
    compile 'org.mongodb:mongodb-driver-sync:3.7.0-rc0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.apache.rocketmq/rocketmq-client
    compile group: 'org.apache.rocketmq', name: 'rocketmq-client', version: '4.2.0'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
// https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup

// https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit
    compile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.30'


}


jar {
    String someString = ''
    configurations.runtime.each {someString = someString + " lib//"+it.name}
    manifest {
        attributes 'Main-Class': 'com.cocoa.shiji.Main'
        attributes 'Class-Path': someString
    }
}
//清除上次的编译过的文件
task clearPj(type:Delete){
    delete 'build','target'
}
task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')
}
//把JAR复制到目标目录
task release(type: Copy,dependsOn: [build,copyJar]) {
// from 'conf'
// into ('build/libs/eachend/conf') // 目标位置
}