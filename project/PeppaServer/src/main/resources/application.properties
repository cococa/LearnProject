server.port=8898
server.context-path=/product
server.url=http://localhost:8898/product/
#server.url=http://www.youweier77.com/product/

#rocketmq


#qiniu
qiniu.accessKey=2_OXoYecQER51rTzh7RRMDySTtX2zjCkaFyNNdQA
qiniu.secretKey=bZaajpEknrAcp7Lt6nnzlEAKxpOZN_vbkVUZNtlH
qiniu.bucket=peppa
qiniu.url=http://pcpuvk4ni.bkt.clouddn.com/



mq.namesrv.addr=116.196.79.208:9876
mq.topic=shangwei

#thymeleaf start
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf end

# log
logging.path=/Users/junshen/var/log/cocoa
logging.level.org.springframework.web=debug
logging.level.org.hibernate=debug
logging.level.com.cocoa.taobao.product_server.controllerer=ERROR


# show sqls
spring.jpa.properties.hibernate.show_sql= true

mybatis.typeAliasesPackage=com.cocoa.taobao.product_server.mapper
mybatis.mapperLocations=classpath:mapper/*.xml
#mybatis.config-location=classpath:config/spring-mybatis.xml

logging.level.com.cocoa.taobao.product_server.mapper=debug

#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%c] %m%n
#
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.Java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG

#pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#<html><body><h1>Whitelabel Error Page</h1><p>This application has no explicit mapping for /error, so you are seeing this as a fallback.</p><div id='created'>Tue Jul 31 11:24:36 CST 2018</div><div>There was an unexpected error (type=Internal Server Error, status=500).</div><div>Could not write JSON: No serializer found for class com.cocoa.taobao.product_server.bean.status.StatusTemp and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class com.cocoa.taobao.product_server.bean.status.StatusTemp and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.cocoa.taobao.product_server.bean.resp.BaseResp[&quot;data&quot;]-&gt;java.util.ArrayList[0])</div></body></html>
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


#jpa
spring.jpa.show-sql=true
spring.datasource.username=root
spring.datasource.password=cocoa
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/taobao?useUnicode=true&characterEncoding=UTF-8

#mongo
spring.data.mongodb.host = 120.79.51.243
spring.data.mongodb.port = 28080
spring.data.mongodb.username= shenjun
spring.data.mongodb.password= cocoa
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.database=shangwei


#mongo db debug
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG


# redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=172.31.19.222
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


# taobao ke api config
taobao.url = http://gw.api.taobao.com/router/rest
taobao.appkey = 24868197
taobao.secret = 2e6bbd74651d91a593aa3118fb3aab54


#httpparams

httpparams.default.pagesize = 10
httpparams.default.pageindex = 1


# ignore shops
xxx.shopArray[0] = 百草味
xxx.shopArray[1] = 周黑鸭
xxx.shopArray[2] = 三只松鼠
xxx.shopArray[3] = 良品铺子
xxx.shopArray[4] = 天猫生鲜
xxx.shopArray[5] = 天猫超市
xxx.shopArray[6] = 天猫


#dingding

dingding.host=https://oapi.dingtalk.com/robot/send?access_token=%s
dingding.token.warn=4ae80e31a761bbf1eb2db85675150954283815257acdc698ae490e3e87898d3e
dingding.token.info=b2f5ced4839088ae5426b015ec4f46b9b5dad13f93a682590be7281be1dd54ed
dingding.token.debug=92a4a49910a8590a093057c90e4f49b85c4d9b3cb975fe342602b218471ffd73
dingding.token.error=e8e488c8756fe5de0d4dd43deddaa9fbb87e0f7b874b024c68726555b0695e52
dingding.token.fatal=5d4185ac929b721ca5fae6fbec352299d1580722b631e041d535fee1cfa841c7


index.default.bannnerSize=5
index.default.recommendSize=3
index.default.itemSize=10


# mq tag
sub.exp.content_img=contentImg-test
sub.exp.item_detail=itemDetail-test
sub.exp.rate_list=RateList-test
sub.exp.tao_code=taoCode-test
sub.exp.keywords=keywords-test
sub.exp.report_msg=reportMsg



#taobao api
taobao.url.content_img=http://api.m.taobao.com/h5/mtop.taobao.detail.getdesc/6.0/?api=mtop.taobao.detail.getdesc&v=6.0&type=jsonp&dataType=jsonp&timeout=20000&callback=mtopjsonp1&data={"id":"%s","type":"0","f":""}
taobao.url.rate_list=https://rate.tmall.com/list_detail_rate.htm?itemId=%s&sellerId=2455221099&currentPage=1&pageSize=30
taobao.url.tao_code=http://pub.alimama.com/common/code/getAuctionCode.json?auctionid=%s&adzoneid=28096268&siteid=8206093&scenes=1&t=1524817792423&_tb_token_=eee73113e3e63&pvid=10_115.236.163.114_4459_1524817629706
taobao.url.item_detail=http://h5api.m.taobao.com/h5/mtop.taobao.detail.getdetail/6.0/?jsv=2.4.8&appKey=12574478&t=1513130908745&sign=4cca0b2f4172fb146369c9b59f3b5116&api=mtop.taobao.detail.getdetail&v=6.0&ttid=2016%40taobao_h5_2.0.0&isSec=0&ecode=0&AntiFlood=true&AntiCreep=true&H5Request=true&type=jsonp&dataType=jsonp&callback=mtopjsonp1&data=%7B%22exParams%22%3A%22%7B%5C%22id%5C%22%3A%5C%22@@%5C%22%7D%22%2C%22itemNumId%22%3A%22@@%22%7D


# mongodb
mongodb-recommend=recommend


