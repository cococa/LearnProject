//: Playground - noun: a place where people can play

import UIKit

// # 析构过程
// 析构器值适用于类类型，当一个类的实例被释放前，析构器就会被调用.
// 析构器用关键字 deinit 来表示

//Swift 通过自动引用计数（ARC）处理实例的内存管理, 实例的释放不需要自己手动去清理，但是，可能需要一些额外的清理，那么就需要析构器了

// 在类的定义中，每个类最多只能有一个析构器，而且析构器不带任何参数

// deinit{
//  do~~~
//}

// 析构器是在类实例释放前被自动调用的，你不需要主动去调用
//子类继承了父类的析构器，并且在子类析构器实现的最后，父类的析构器会被自动调用。即使子类没有提供自己的析构器，父类的析构器也同样会被调用。(类似java)

class Person{

    deinit {
        print("im dead")
    }

}

var p : Person? = Person()   // 涉及到可选类型
p = nil




